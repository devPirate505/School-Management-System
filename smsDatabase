drop database SMS;
create database SMS;
use SMS;

CREATE TABLE ADMIN(
	ADMIN_ID  INT PRIMARY KEY,
	NAME VARCHAR(22) NOT NULL,
	EMAIL VARCHAR(30) NOT NULL,
	USERNAME VARCHAR(22) NOT NULL,
	PASSWORD VARCHAR(22) NOT NULL);


CREATE TABLE TEACHER(
    	T_ID INT PRIMARY KEY,
    	NAME VARCHAR(22) NOT NULL,
    	GENDER VARCHAR(10) NOT NULL,
	PHONE VARCHAR(15) NOT NULL,
	EMAIL VARCHAR(30) NOT NULL,
  	SALARY FLOAT,
   	USERNAME VARCHAR(22) NOT NULL,
	PASSWORD VARCHAR(22) NOT NULL,
	INDEX(T_ID),
	ADMIN_ID INT,
	CONSTRAINT FK_ADMIN_ID FOREIGN KEY(ADMIN_ID) REFERENCES
	ADMIN(ADMIN_ID));
    
CREATE TABLE CLASS(
    	CLASS_ID INT PRIMARY KEY,
    	NAME VARCHAR(10) NOT NULL,
    	STRENGTH INT,
    	CLASS_TEACHER VARCHAR(22));
    
CREATE TABLE STUDENT(
    	ROLL_NO VARCHAR(22) PRIMARY KEY,
    	NAME VARCHAR(22) NOT NULL,
    	EMAIL VARCHAR(30) NOT NULL,
    	DOB DATE NOT NULL,
    	GENDER VARCHAR(10) NOT NULL,
    	CLASS_ID INT,
    	ADMIN_ID INT,
    	INDEX(ROLL_NO), 
    	CONSTRAINT FK_STD_CLASS_ID FOREIGN KEY(CLASS_ID) REFERENCES
    	CLASS(CLASS_ID),
    	CONSTRAINT FK_STD_ADMIN_ID FOREIGN KEY(ADMIN_ID) REFERENCES
    	ADMIN(ADMIN_ID));

CREATE TABLE SUBJECT(
    	SUB_ID INT PRIMARY KEY,
    	NAME VARCHAR(22) NOT NULL,
    	CLASS_ID INT,
    	INDEX(SUB_ID),
    	CONSTRAINT FK_CLASS_ID_SUBJECT FOREIGN KEY(CLASS_ID) REFERENCES
    	CLASS(CLASS_ID));
    	
CREATE TABLE MARKS(
    	ROLL_NO VARCHAR(22),
    	SUB_ID INT,
    	CLASS_ID INT,
    	TOTAL_MARKS INT NOT NULL,
    	OBTAINED_MARKS INT,
    	TERM VARCHAR(22) NOT NULL,
    	CONSTRAINT PK_MARKS PRIMARY KEY (ROLL_NO,SUB_ID,TERM),
    	CONSTRAINT FK_MARKS_ROLL_NO FOREIGN KEY(ROLL_NO) REFERENCES
    	STUDENT(ROLL_NO),
    	CONSTRAINT FK_MARKS_CLASS_ID FOREIGN KEY(CLASS_ID)
    	REFERENCES CLASS(CLASS_ID),
    	CONSTRAINT FK_MARKS_SUB FOREIGN KEY(SUB_ID)
    	REFERENCES SUBJECT(SUB_ID));

CREATE TABLE LOGIN(
    	USERNAME VARCHAR(22) PRIMARY KEY,
    	PASSWORD VARCHAR(22) NOT NULL,
    	EMAIL VARCHAR(22) NOT NULL,
    	ROLE VARCHAR(22) NOT NULL);
   
    	 
CREATE TABLE TEACHER_STUDENT(
    	TEACHER_ID INT,
    	SUBJECT_ID INT,
    	CONSTRAINT PRIMARY KEY(TEACHER_ID,SUBJECT_ID),
    	CONSTRAINT FK_TEACHER_STD FOREIGN KEY(TEACHER_ID)
    	REFERENCES TEACHER(T_ID),
    	CONSTRAINT FK_SUBJECT_STD FOREIGN KEY(SUBJECT_ID)
    	REFERENCES SUBJECT(SUB_ID));
    
DELIMITER //
CREATE TRIGGER class_strength_increment
AFTER INSERT ON STUDENT 
FOR EACH ROW 
BEGIN 
    DECLARE class_strength INT;
    SELECT STRENGTH INTO class_strength FROM ClASS WHERE CLASS_ID = NEW.CLASS_ID;
    UPDATE CLASS SET STRENGTH = class_strength + 1 WHERE CLASS_ID = NEW.CLASS_ID;
END //
DELIMITER ;

DELIMITER //
CREATE TRIGGER class_strength_decrement
AFTER DELETE ON STUDENT 
FOR EACH ROW 
BEGIN 
    DECLARE class_strength INT;
    SELECT STRENGTH INTO class_strength FROM ClASS WHERE CLASS_ID = OLD.CLASS_ID;
    UPDATE CLASS SET STRENGTH = class_strength - 1 WHERE CLASS_ID = OLD.CLASS_ID;
END //
DELIMITER ;

DELIMITER //

CREATE PROCEDURE INSERT_STUDENT(
IN ST_ROLL_NO VARCHAR(22),
IN ST_NAME VARCHAR(22),
IN ST_EMAIL VARCHAR(30),
IN ST_PASSWORD VARCHAR(33),
IN ST_DOB DATE,
IN ST_GENDER VARCHAR(10),
IN ST_CLASS_ID INT,
IN ST_ADMIN_ID INT)
BEGIN
  INSERT INTO STUDENT(ROLL_NO, NAME, EMAIL,PASSWORD,DOB, GENDER, CLASS_ID, ADMIN_ID) 
  VALUES(ST_ROLL_NO, ST_NAME, ST_EMAIL,ST_PASSWORD, ST_DOB, ST_GENDER, ST_CLASS_ID, ST_ADMIN_ID);
END //

DELIMITER ;


INSERT INTO ADMIN (ADMIN_ID, NAME, EMAIL, USERNAME, PASSWORD) VALUES
(1, 'John Smith', 'john.smith@example.com', 'jsmith', 'password123');

INSERT INTO ADMIN (ADMIN_ID, NAME, EMAIL, USERNAME, PASSWORD) VALUES
(2, 'Emily Davis', 'emily.davis@example.com', 'edavis', 'password456');

INSERT INTO TEACHER (T_ID, NAME, GENDER, PHONE, EMAIL, SALARY, USERNAME, PASSWORD, ADMIN_ID) VALUES 
  (1, 'John Doe', 'Male', '+1-123-456-7890', 'johndoe@email.com', 50000.00, 'johndoe', 'password', 1),
  (2, 'Jane Smith', 'Female', '+1-234-567-8901', 'janesmith@email.com', 45000.00, 'janesmith', 'password', 1),
  (3, 'Mike Johnson', 'Male', '+1-345-678-9012', 'mikejohnson@email.com', 55000.00, 'mikejohnson', 'password', 2),
  (4, 'Sarah Lee', 'Female', '+1-456-789-0123', 'sarahlee@email.com', 48000.00, 'sarahlee', 'password', 2),
  (5, 'David Kim', 'Male', '+1-567-890-1234', 'davidkim@email.com', 60000.00, 'davidkim', 'password', 1);







